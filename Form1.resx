<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        cn4FR5Wopq10U/YAAAAASUVORK5CYII=
</value>
  </data>
</root>